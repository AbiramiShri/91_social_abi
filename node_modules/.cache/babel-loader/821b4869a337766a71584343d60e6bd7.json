{"ast":null,"code":"import createEngine, { DiagramModel } from \"@projectstorm/react-diagrams\";\nimport { JSCustomNodeFactory } from \"../custom-node-js/JSCustomNodeFactory\";\nconst engine = createEngine();\nengine.getNodeFactories().registerFactory(new JSCustomNodeFactory());\nconst model = new DiagramModel();\nengine.setModel(model);\nconst INITIAL_STATE = {\n  sourceNodeArray: [],\n  destinationNodeArray: [],\n  engineRef: engine,\n  diagramModelRef: model,\n  selectedNode: {},\n  templateList: localStorage.getItem(\"TEMPLATE_LIST\") ? JSON.parse(localStorage.getItem(\"TEMPLATE_LIST\")) : []\n};\n\nconst nodeBuilderReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"SET_SOURCE_NODE_LIST\":\n      state.sourceNodeArray = [...action.payload];\n      return { ...state\n      };\n\n    case \"SET_DESTINATION_NODE_LIST\":\n      state.destinatonNodeArray = [...action.payload];\n      return { ...state\n      };\n\n    case \"SET_ENGINE_REF\":\n      state.engineRef = action.payload;\n      return { ...state\n      };\n\n    case \"SET_SELECTED_NODE\":\n      state.selectedNode = action.payload;\n      return { ...state\n      };\n\n    case \"SET_TEMPLATES\":\n      state.templateList.push(action.payload);\n      localStorage.setItem(\"TEMPLATE_LIST\", JSON.stringify(state.templateList));\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default nodeBuilderReducer;","map":{"version":3,"sources":["D:/workspace/interview/abi_react_app/src/screens/nodeBuilder/services/nodeBuilderReducer.js"],"names":["createEngine","DiagramModel","JSCustomNodeFactory","engine","getNodeFactories","registerFactory","model","setModel","INITIAL_STATE","sourceNodeArray","destinationNodeArray","engineRef","diagramModelRef","selectedNode","templateList","localStorage","getItem","JSON","parse","nodeBuilderReducer","state","action","type","payload","destinatonNodeArray","push","setItem","stringify"],"mappings":"AAAA,OAAOA,YAAP,IAAuBC,YAAvB,QAA2C,8BAA3C;AACA,SAASC,mBAAT,QAAoC,uCAApC;AACA,MAAMC,MAAM,GAAGH,YAAY,EAA3B;AACAG,MAAM,CAACC,gBAAP,GAA0BC,eAA1B,CAA0C,IAAIH,mBAAJ,EAA1C;AACA,MAAMI,KAAK,GAAG,IAAIL,YAAJ,EAAd;AACAE,MAAM,CAACI,QAAP,CAAgBD,KAAhB;AAEA,MAAME,aAAa,GAAG;AACpBC,EAAAA,eAAe,EAAE,EADG;AAEpBC,EAAAA,oBAAoB,EAAE,EAFF;AAGpBC,EAAAA,SAAS,EAAER,MAHS;AAIpBS,EAAAA,eAAe,EAAEN,KAJG;AAKpBO,EAAAA,YAAY,EAAE,EALM;AAMpBC,EAAAA,YAAY,EAAEC,YAAY,CAACC,OAAb,CAAqB,eAArB,IACVC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CADU,GAEV;AARgB,CAAtB;;AAWA,MAAMG,kBAAkB,GAAG,CAACC,KAAK,GAAGZ,aAAT,EAAwBa,MAAxB,KAAmC;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AACEF,MAAAA,KAAK,CAACX,eAAN,GAAwB,CAAC,GAAGY,MAAM,CAACE,OAAX,CAAxB;AACA,aAAO,EACL,GAAGH;AADE,OAAP;;AAGF,SAAK,2BAAL;AACEA,MAAAA,KAAK,CAACI,mBAAN,GAA4B,CAAC,GAAGH,MAAM,CAACE,OAAX,CAA5B;AACA,aAAO,EACL,GAAGH;AADE,OAAP;;AAGF,SAAK,gBAAL;AACEA,MAAAA,KAAK,CAACT,SAAN,GAAkBU,MAAM,CAACE,OAAzB;AACA,aAAO,EACL,GAAGH;AADE,OAAP;;AAGF,SAAK,mBAAL;AACEA,MAAAA,KAAK,CAACP,YAAN,GAAqBQ,MAAM,CAACE,OAA5B;AACA,aAAO,EACL,GAAGH;AADE,OAAP;;AAGF,SAAK,eAAL;AACEA,MAAAA,KAAK,CAACN,YAAN,CAAmBW,IAAnB,CAAwBJ,MAAM,CAACE,OAA/B;AACAR,MAAAA,YAAY,CAACW,OAAb,CAAqB,eAArB,EAAsCT,IAAI,CAACU,SAAL,CAAeP,KAAK,CAACN,YAArB,CAAtC;AACA,aAAO,EACL,GAAGM;AADE,OAAP;;AAGF;AACE,aAAOA,KAAP;AA5BJ;AA8BD,CA/BD;;AAgCA,eAAeD,kBAAf","sourcesContent":["import createEngine, { DiagramModel } from \"@projectstorm/react-diagrams\";\nimport { JSCustomNodeFactory } from \"../custom-node-js/JSCustomNodeFactory\";\nconst engine = createEngine();\nengine.getNodeFactories().registerFactory(new JSCustomNodeFactory());\nconst model = new DiagramModel();\nengine.setModel(model);\n\nconst INITIAL_STATE = {\n  sourceNodeArray: [],\n  destinationNodeArray: [],\n  engineRef: engine,\n  diagramModelRef: model,\n  selectedNode: {},\n  templateList: localStorage.getItem(\"TEMPLATE_LIST\")\n    ? JSON.parse(localStorage.getItem(\"TEMPLATE_LIST\"))\n    : []\n};\n\nconst nodeBuilderReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"SET_SOURCE_NODE_LIST\":\n      state.sourceNodeArray = [...action.payload];\n      return {\n        ...state\n      };\n    case \"SET_DESTINATION_NODE_LIST\":\n      state.destinatonNodeArray = [...action.payload];\n      return {\n        ...state\n      };\n    case \"SET_ENGINE_REF\":\n      state.engineRef = action.payload;\n      return {\n        ...state\n      };\n    case \"SET_SELECTED_NODE\":\n      state.selectedNode = action.payload;\n      return {\n        ...state\n      };\n    case \"SET_TEMPLATES\":\n      state.templateList.push(action.payload);\n      localStorage.setItem(\"TEMPLATE_LIST\", JSON.stringify(state.templateList));\n      return {\n        ...state\n      };\n    default:\n      return state;\n  }\n};\nexport default nodeBuilderReducer;\n"]},"metadata":{},"sourceType":"module"}